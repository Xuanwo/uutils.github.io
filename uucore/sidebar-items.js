initSidebarItems({"enum":[["ConversionResult",""],["InvalidEncodingHandling",""]],"externcrate":[["libc",""]],"fn":[["args_os",""],["execution_phrase","Derive the complete execution phrase for “usage”."],["get_utility_is_second_arg",""],["set_utility_is_second_arg",""],["util_name","Derive the utility name."]],"macro":[["app",""],["crash","Display the provided error message, then `exit()` with the provided exit code"],["crash_if_err","Unwraps the Result. Instead of panicking, it exists the program with the provided exit code."],["exit","Calls `exit()` with the provided exit code."],["has",""],["msg_expects_no_more_than_one_of",""],["msg_expects_one_of",""],["msg_invalid_input",""],["msg_invalid_opt_use",""],["msg_opt_invalid_should_be",""],["msg_opt_only_usable_if",""],["safe_write",""],["safe_writeln",""],["show",""],["show_error","Show an error to stderr in a similar style to GNU coreutils."],["show_error_custom_description","Show a warning to stderr in a similar style to GNU coreutils."],["show_if_err",""],["show_usage_error","Show a bad invocation help message in a similar style to GNU coreutils."],["show_warning",""],["snippet_list_join",""],["snippet_list_join_oxford_comma",""],["uio_error","Shorthand to construct [`UIoError`]-instances."]],"mod":[["backup_control","Implement GNU-style backup functionality."],["coreopts",""],["display",""],["encoding",""],["entries","Get password/group file entry"],["error","All utils return exit with an exit code. Usually, the following scheme is used:"],["fs","Set of functions to manage files and symlinks"],["fsext","Set of functions to manage file systems"],["mode","Set of functions to parse modes"],["os",""],["panic",""],["parse_size",""],["parse_time",""],["perms","Common functions to manage permissions"],["pipes",""],["process","Set of functions to manage IDs"],["ranges",""],["ringbuffer","A fixed-size ring buffer."],["signals",""],["utmpx","Aims to provide platform-independent methods to obtain login records"],["version_cmp",""]],"trait":[["Args",""]]});