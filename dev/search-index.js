var searchIndex = JSON.parse('{\
"arch":{"doc":"","t":[5],"n":["main"],"q":["arch"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"base32":{"doc":"","t":[5],"n":["main"],"q":["base32"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"base64":{"doc":"","t":[5],"n":["main"],"q":["base64"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"basename":{"doc":"","t":[5],"n":["main"],"q":["basename"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"basenc":{"doc":"","t":[5],"n":["main"],"q":["basenc"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"cat":{"doc":"","t":[5],"n":["main"],"q":["cat"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"chcon":{"doc":"","t":[5],"n":["main"],"q":["chcon"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"chgrp":{"doc":"","t":[5],"n":["main"],"q":["chgrp"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"chmod":{"doc":"","t":[5],"n":["main"],"q":["chmod"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"chown":{"doc":"","t":[5],"n":["main"],"q":["chown"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"chroot":{"doc":"","t":[5],"n":["main"],"q":["chroot"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"cksum":{"doc":"","t":[5],"n":["main"],"q":["cksum"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"comm":{"doc":"","t":[5],"n":["main"],"q":["comm"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"coreutils":{"doc":"","t":[6,17,5,5,5,5,5,5,5],"n":["UtilityMap","VERSION","binary_path","gen_completions","gen_coreutils_app","main","name","usage","util_map"],"q":["coreutils","","","","","","","",""],"d":["","","","Prints completions for the utility in the first parameter …","","","","",""],"i":[0,0,0,0,0,0,0,0,0],"f":[null,null,[[],["pathbuf",3]],[[["map",3]],["never",0]],[[["map",3]],["command",6]],[[]],[[["path",3]],["str",0]],[[["map",3],["str",0]]],[[],["map",3,[["str",0]]]]],"p":[]},\
"cp":{"doc":"","t":[5],"n":["main"],"q":["cp"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"csplit":{"doc":"","t":[5],"n":["main"],"q":["csplit"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"cut":{"doc":"","t":[5],"n":["main"],"q":["cut"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"date":{"doc":"","t":[5],"n":["main"],"q":["date"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"dd":{"doc":"","t":[5],"n":["main"],"q":["dd"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"df":{"doc":"","t":[5],"n":["main"],"q":["df"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"dir":{"doc":"","t":[5],"n":["main"],"q":["dir"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"dircolors":{"doc":"","t":[5],"n":["main"],"q":["dircolors"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"dirname":{"doc":"","t":[5],"n":["main"],"q":["dirname"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"du":{"doc":"","t":[5],"n":["main"],"q":["du"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"echo":{"doc":"","t":[5],"n":["main"],"q":["echo"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"env":{"doc":"","t":[5],"n":["main"],"q":["env"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"expand":{"doc":"","t":[5],"n":["main"],"q":["expand"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"expr":{"doc":"","t":[5],"n":["main"],"q":["expr"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"factor":{"doc":"","t":[5],"n":["main"],"q":["factor"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"false":{"doc":"","t":[5],"n":["main"],"q":["false"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"fmt":{"doc":"","t":[5],"n":["main"],"q":["fmt"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"fold":{"doc":"","t":[5],"n":["main"],"q":["fold"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"groups":{"doc":"","t":[5],"n":["main"],"q":["groups"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"hashsum":{"doc":"","t":[5],"n":["main"],"q":["hashsum"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"head":{"doc":"","t":[5],"n":["main"],"q":["head"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"hostid":{"doc":"","t":[5],"n":["main"],"q":["hostid"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"hostname":{"doc":"","t":[5],"n":["main"],"q":["hostname"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"id":{"doc":"","t":[5],"n":["main"],"q":["id"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"install":{"doc":"","t":[5],"n":["main"],"q":["install"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"join":{"doc":"","t":[5],"n":["main"],"q":["join"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"kill":{"doc":"","t":[5],"n":["main"],"q":["kill"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"libstdbuf":{"doc":"","t":[5],"n":["__stdbuf"],"q":["libstdbuf"],"d":["Safety"],"i":[0],"f":[[[]]],"p":[]},\
"link":{"doc":"","t":[5],"n":["main"],"q":["link"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"ln":{"doc":"","t":[5],"n":["main"],"q":["ln"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"logname":{"doc":"","t":[5],"n":["main"],"q":["logname"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"ls":{"doc":"","t":[5],"n":["main"],"q":["ls"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"mkdir":{"doc":"","t":[5],"n":["main"],"q":["mkdir"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"mkfifo":{"doc":"","t":[5],"n":["main"],"q":["mkfifo"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"mknod":{"doc":"","t":[5],"n":["main"],"q":["mknod"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"mktemp":{"doc":"","t":[5],"n":["main"],"q":["mktemp"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"more":{"doc":"","t":[5],"n":["main"],"q":["more"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"mv":{"doc":"","t":[5],"n":["main"],"q":["mv"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"nice":{"doc":"","t":[5],"n":["main"],"q":["nice"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"nl":{"doc":"","t":[5],"n":["main"],"q":["nl"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"nohup":{"doc":"","t":[5],"n":["main"],"q":["nohup"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"nproc":{"doc":"","t":[5],"n":["main"],"q":["nproc"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"numfmt":{"doc":"","t":[5],"n":["main"],"q":["numfmt"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"od":{"doc":"","t":[5],"n":["main"],"q":["od"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"paste":{"doc":"","t":[5],"n":["main"],"q":["paste"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"pathchk":{"doc":"","t":[5],"n":["main"],"q":["pathchk"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"pinky":{"doc":"","t":[5],"n":["main"],"q":["pinky"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"pr":{"doc":"","t":[5],"n":["main"],"q":["pr"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"printenv":{"doc":"","t":[5],"n":["main"],"q":["printenv"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"printf":{"doc":"","t":[5],"n":["main"],"q":["printf"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"ptx":{"doc":"","t":[5],"n":["main"],"q":["ptx"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"pwd":{"doc":"","t":[5],"n":["main"],"q":["pwd"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"readlink":{"doc":"","t":[5],"n":["main"],"q":["readlink"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"realpath":{"doc":"","t":[5],"n":["main"],"q":["realpath"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"relpath":{"doc":"","t":[5],"n":["main"],"q":["relpath"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"rm":{"doc":"","t":[5],"n":["main"],"q":["rm"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"rmdir":{"doc":"","t":[5],"n":["main"],"q":["rmdir"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"runcon":{"doc":"","t":[5],"n":["main"],"q":["runcon"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"seq":{"doc":"","t":[5],"n":["main"],"q":["seq"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"shred":{"doc":"","t":[5],"n":["main"],"q":["shred"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"shuf":{"doc":"","t":[5],"n":["main"],"q":["shuf"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"sleep":{"doc":"","t":[5],"n":["main"],"q":["sleep"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"sort":{"doc":"","t":[5],"n":["main"],"q":["sort"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"split":{"doc":"","t":[5],"n":["main"],"q":["split"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"stat":{"doc":"","t":[5],"n":["main"],"q":["stat"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"stdbuf":{"doc":"","t":[5],"n":["main"],"q":["stdbuf"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"sum":{"doc":"","t":[5],"n":["main"],"q":["sum"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"sync":{"doc":"","t":[5],"n":["main"],"q":["sync"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"tac":{"doc":"","t":[5],"n":["main"],"q":["tac"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"tail":{"doc":"","t":[5],"n":["main"],"q":["tail"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"tee":{"doc":"","t":[5],"n":["main"],"q":["tee"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"test":{"doc":"","t":[5],"n":["main"],"q":["test"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"timeout":{"doc":"","t":[5],"n":["main"],"q":["timeout"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"touch":{"doc":"","t":[5],"n":["main"],"q":["touch"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"tr":{"doc":"","t":[5],"n":["main"],"q":["tr"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"true":{"doc":"","t":[5],"n":["main"],"q":["true"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"truncate":{"doc":"","t":[5],"n":["main"],"q":["truncate"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"tsort":{"doc":"","t":[5],"n":["main"],"q":["tsort"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"tty":{"doc":"","t":[5],"n":["main"],"q":["tty"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"uname":{"doc":"","t":[5],"n":["main"],"q":["uname"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"unexpand":{"doc":"","t":[5],"n":["main"],"q":["unexpand"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"uniq":{"doc":"","t":[5],"n":["main"],"q":["uniq"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"unlink":{"doc":"","t":[5],"n":["main"],"q":["unlink"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"uptime":{"doc":"","t":[5],"n":["main"],"q":["uptime"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"users":{"doc":"","t":[5],"n":["main"],"q":["users"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"uu_arch":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_arch",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_base32":{"doc":"","t":[0,5,5,7,3,5,11,11,12,11,11,5,5,12,11,0,5,12,11,11,11,12,7,7,7,7],"n":["base_common","uu_app","uumain","BASE_CMD_PARSE_ERROR","Config","base_app","borrow","borrow_mut","decode","from","from","get_input","handle_input","ignore_garbage","into","options","parse_base_cmd_args","to_read","try_from","try_into","type_id","wrap_cols","DECODE","FILE","IGNORE_GARBAGE","WRAP"],"q":["uu_base32","","","uu_base32::base_common","","","","","","","","","","","","","","","","","","","uu_base32::base_common::options","","",""],"d":["","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,0,0,1,1,1,1,1,0,0,0,0],"f":[null,[[],["command",6]],[[],["i32",0]],null,null,[[["str",0],["str",0]],["command",6]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["argmatches",3]],["uresult",6]],[[]],[[["config",3],["stdin",3]],["uresult",6,[["box",3,[["read",8]]]]]],[[["",0],["format",4],["option",4,[["usize",0]]],["bool",0],["bool",0]],["uresult",6]],null,[[]],null,[[["str",0],["str",0]],["uresult",6,[["config",3]]]],null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null],"p":[[3,"Config"]]},\
"uu_base64":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_base64",""],"d":["",""],"i":[0,0],"f":[[[],["app",3]],[[],["i32",0]]],"p":[]},\
"uu_basename":{"doc":"","t":[0,5,5,7,7,7,7],"n":["options","uu_app","uumain","MULTIPLE","NAME","SUFFIX","ZERO"],"q":["uu_basename","","","uu_basename::options","","",""],"d":["","","","","","",""],"i":[0,0,0,0,0,0,0],"f":[null,[[],["command",6]],[[],["i32",0]],null,null,null,null],"p":[]},\
"uu_basenc":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_basenc",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_cat":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_cat",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_chcon":{"doc":"","t":[0,5,5,7,7,7,7,7,7,7,7,0,0,0,7,7,7,7,7,7,7],"n":["options","uu_app","uumain","HELP","RANGE","RECURSIVE","REFERENCE","ROLE","TYPE","USER","VERBOSE","dereference","preserve_root","sym_links","DEREFERENCE","NO_DEREFERENCE","NO_PRESERVE_ROOT","PRESERVE_ROOT","FOLLOW_ARG_DIR_SYM_LINK","FOLLOW_DIR_SYM_LINKS","NO_FOLLOW_SYM_LINKS"],"q":["uu_chcon","","","uu_chcon::options","","","","","","","","","","","uu_chcon::options::dereference","","uu_chcon::options::preserve_root","","uu_chcon::options::sym_links","",""],"d":["","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,[[],["command",6]],[[],["i32",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[]},\
"uu_chgrp":{"doc":"","t":[0,5,5,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,12,5,5,11,11,10,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,5,12,12,12,12,5],"n":["entries","uu_app","uumain","Group","Locate","Passwd","belongs_to","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","from","from","get_groups","get_groups_gnu","gid","gid","gid2grp","grp2gid","into","into","locate","locate","locate","locate","locate","name","name","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","uid","uid2usr","user_dir","user_info","user_passwd","user_shell","usr2uid"],"q":["uu_chgrp","","","uu_chgrp::entries","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Get password/group file entry","","","","Fetch desired entry.","","This is a wrapper function for <code>libc::getgrouplist</code>.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","From: …","The list of group IDs returned from GNU’s <code>groups</code> and GNU…","AKA passwd.pw_gid","AKA group.gr_gid","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","AKA passwd.pw_name","AKA group.gr_name","","","","","","","","","AKA passwd.pw_uid","","AKA passwd.pw_dir","AKA passwd.pw_gecos","AKA passwd.pw_passwd","AKA passwd.pw_shell",""],"i":[0,0,0,0,0,0,1,1,2,1,2,1,2,1,2,1,2,1,2,0,0,1,2,0,0,1,2,3,1,1,2,2,1,2,1,2,1,2,1,2,1,2,1,0,1,1,1,1,0],"f":[null,[[],["command",6]],[[],["i32",0]],null,null,null,[[["",0]],["vec",3,[["u32",0],["global",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["passwd",3]],[[["",0]],["group",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[],["result",4,[["vec",3,[["u32",0],["global",3]]],["error",3]]]],[[["option",4,[["u32",0]]]],["result",4,[["vec",3,[["u32",0],["global",3]]],["error",3]]]],null,null,[[["u32",0]],["result",4,[["string",3],["error",3]]]],[[["str",0]],["result",4,[["u32",0],["error",3]]]],[[]],[[]],[[],["result",4,[["error",3]]]],[[["u32",0]],["result",4,[["passwd",3],["error",3]]]],[[["str",0]],["result",4,[["passwd",3],["error",3]]]],[[["u32",0]],["result",4,[["group",3],["error",3]]]],[[["str",0]],["result",4,[["group",3],["error",3]]]],null,null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["u32",0]],["result",4,[["string",3],["error",3]]]],null,null,null,null,[[["str",0]],["result",4,[["u32",0],["error",3]]]]],"p":[[3,"Passwd"],[3,"Group"],[8,"Locate"]]},\
"uu_chmod":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_chmod",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_chown":{"doc":"","t":[3,8,3,11,11,11,11,11,11,11,11,11,0,11,11,11,11,12,12,11,11,10,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,12,12,12,5,5,3,8,3,5,5,12,12,5,5,10,12,12,12,5,12,12,12,12,5],"n":["Group","Locate","Passwd","belongs_to","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","entries","fmt","fmt","from","from","gid","gid","into","into","locate","locate","locate","locate","locate","name","name","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","uid","user_dir","user_info","user_passwd","user_shell","uu_app","uumain","Group","Locate","Passwd","get_groups","get_groups_gnu","gid","gid","gid2grp","grp2gid","locate","name","name","uid","uid2usr","user_dir","user_info","user_passwd","user_shell","usr2uid"],"q":["uu_chown","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uu_chown::entries","","","","","","","","","","","","","","","","","",""],"d":["","Fetch desired entry.","","This is a wrapper function for <code>libc::getgrouplist</code>.","","","","","","","","","Get password/group file entry","","","Returns the argument unchanged.","Returns the argument unchanged.","AKA passwd.pw_gid","AKA group.gr_gid","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","AKA passwd.pw_name","AKA group.gr_name","","","","","","","","","AKA passwd.pw_uid","AKA passwd.pw_dir","AKA passwd.pw_gecos","AKA passwd.pw_passwd","AKA passwd.pw_shell","","","","Fetch desired entry.","","From: …","The list of group IDs returned from GNU’s <code>groups</code> and GNU…","AKA passwd.pw_gid","AKA group.gr_gid","","","","AKA passwd.pw_name","AKA group.gr_name","AKA passwd.pw_uid","","AKA passwd.pw_dir","AKA passwd.pw_gecos","AKA passwd.pw_passwd","AKA passwd.pw_shell",""],"i":[0,0,0,1,1,2,1,2,1,2,1,2,0,1,2,1,2,1,2,1,2,3,1,1,2,2,1,2,1,2,1,2,1,2,1,2,1,1,1,1,1,0,0,0,0,0,0,0,1,2,0,0,3,1,2,1,0,1,1,1,1,0],"f":[null,null,null,[[["",0]],["vec",3,[["u32",0],["global",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["passwd",3]],[[["",0]],["group",3]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],null,null,[[]],[[]],[[],["result",4,[["error",3]]]],[[["str",0]],["result",4,[["passwd",3],["error",3]]]],[[["u32",0]],["result",4,[["passwd",3],["error",3]]]],[[["str",0]],["result",4,[["group",3],["error",3]]]],[[["u32",0]],["result",4,[["group",3],["error",3]]]],null,null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,[[],["command",6]],[[],["i32",0]],null,null,null,[[],["result",4,[["vec",3,[["u32",0],["global",3]]],["error",3]]]],[[["option",4,[["u32",0]]]],["result",4,[["vec",3,[["u32",0],["global",3]]],["error",3]]]],null,null,[[["u32",0]],["result",4,[["string",3],["error",3]]]],[[["str",0]],["result",4,[["u32",0],["error",3]]]],[[],["result",4,[["error",3]]]],null,null,null,[[["u32",0]],["result",4,[["string",3],["error",3]]]],null,null,null,null,[[["str",0]],["result",4,[["u32",0],["error",3]]]]],"p":[[3,"Passwd"],[3,"Group"],[8,"Locate"]]},\
"uu_chroot":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_chroot",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_cksum":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_cksum",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_comm":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_comm",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_cp":{"doc":"","t":[13,13,13,4,13,13,13,13,4,13,13,4,6,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,4,13,4,13,13,6,6,4,13,13,13,6,6,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,12,12,12,12,12,12,12,12,12,12,12,12],"n":["Always","Always","AttrOnly","Attribute","Auto","Auto","Backup","Clobber","ClobberMode","Context","Copy","CopyMode","CopyResult","Directory","Error","Error","File","Force","Interactive","InvalidArgument","IoErr","IoErrContext","Link","Links","Mode","Never","Never","NoClobber","NotAllFilesCopied","NotImplemented","Options","OverwriteMode","Ownership","ReflinkMode","RemoveDestination","Skipped","Source","SourceSlice","SparseMode","Standard","StripPrefixError","SymLink","Target","TargetSlice","TargetType","Timestamps","Update","WalkDirErr","Xattr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","code","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","into","into","into","into","into","into","into","into","into","localize_to_target","ne","partial_cmp","path_has_prefix","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uu_app","uumain","verify_target_type","0","0","0","0","0","0","0","0","0","1","0","0"],"q":["uu_cp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uu_cp::Error","","","","","","","","","","uu_cp::OverwriteMode",""],"d":["","","","","","","Invalid arguments to backup","Default Always overwrite existing files","Specifies whether when overwrite files","","","","","","","General copy error","","","Prompt before overwriting a file","Result of a skipped file","Simple io::Error wrapper","Wrapper for io::Error with path context","","","","","","Never overwrite a file","Represents the state when a non-fatal error has occurred …","All standard options are included as an an implementation …","Re-usable, extensible copy options","Specifies whether when overwrite files","","Possible arguments for <code>--reflink</code>.","","Result of a skipped file","","","Possible arguments for <code>--sparse</code>.","","Simple std::path::StripPrefixError wrapper","","","","Specifies the expected file type of copy target","","","Simple walkdir::Error wrapper","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Remove the <code>root</code> prefix from <code>source</code> and prefix it with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generate an error message if <code>target</code> is not the correct …","","","","","","","","","","","",""],"i":[1,2,3,0,1,2,4,5,0,6,3,0,0,7,0,4,7,8,5,4,4,4,3,6,6,1,2,5,4,4,0,0,6,0,8,4,0,0,0,8,4,3,0,0,0,6,3,4,6,7,3,9,4,8,5,1,2,6,7,3,9,4,8,5,1,2,6,8,5,1,2,6,8,5,1,2,6,6,4,8,5,1,2,6,8,5,1,2,6,4,4,6,7,3,9,4,4,4,4,4,4,4,4,8,5,1,2,6,6,7,3,9,4,8,5,1,2,6,0,5,6,0,4,8,5,1,2,6,4,7,3,9,4,8,5,1,2,6,7,3,9,4,8,5,1,2,6,7,3,9,4,8,5,1,2,6,0,0,0,10,11,12,13,14,15,16,17,18,11,19,20],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["clobbermode",4]],[[["",0]],["overwritemode",4]],[[["",0]],["reflinkmode",4]],[[["",0]],["sparsemode",4]],[[["",0]],["attribute",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["attribute",4]],["ordering",4]],[[["",0]],["i32",0]],[[["",0],["clobbermode",4]],["bool",0]],[[["",0],["overwritemode",4]],["bool",0]],[[["",0],["reflinkmode",4]],["bool",0]],[[["",0],["sparsemode",4]],["bool",0]],[[["",0],["attribute",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["context",3,[["string",3],["error",3]]]],["error",4]],[[["context",3,[["str",0],["error",3]]]],["error",4]],[[["stripprefixerror",3]],["error",4]],[[["error",3]],["error",4]],[[["str",0]],["error",4]],[[["string",3]],["error",4]],[[["error",3]],["error",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",0]],["copyresult",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["path",3],["path",3],["path",3]],["copyresult",6,[["pathbuf",3]]]],[[["",0],["overwritemode",4]],["bool",0]],[[["",0],["attribute",4]],["option",4,[["ordering",4]]]],[[["path",3],["path",3]],["result",6,[["bool",0]]]],[[["",0]],["option",4,[["error",8]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["command",6]],[[],["i32",0]],[[["path",3],["targettype",4]],["copyresult",6]],null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"ReflinkMode"],[4,"SparseMode"],[4,"CopyMode"],[4,"Error"],[4,"OverwriteMode"],[4,"Attribute"],[4,"TargetType"],[4,"ClobberMode"],[3,"Options"],[13,"IoErr"],[13,"IoErrContext"],[13,"Error"],[13,"WalkDirErr"],[13,"StripPrefixError"],[13,"Skipped"],[13,"InvalidArgument"],[13,"NotImplemented"],[13,"Backup"],[13,"Clobber"],[13,"Interactive"]]},\
"uu_csplit":{"doc":"","t":[3,11,11,5,11,11,11,11,11,5,5],"n":["CsplitOptions","borrow","borrow_mut","csplit","from","into","try_from","try_into","type_id","uu_app","uumain"],"q":["uu_csplit","","","","","","","","","",""],"d":["Command line options for csplit.","","","Splits a file into severals according to the command line …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,1,1,0,1,1,1,1,1,0,0],"f":[null,[[["",0]],["",0]],[[["",0]],["",0]],[[["csplitoptions",3],["vec",3,[["pattern",4]]]],["result",4,[["cspliterror",4]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[],["command",6]],[[],["i32",0]]],"p":[[3,"CsplitOptions"]]},\
"uu_cut":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_cut",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_date":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_date",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_dd":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_dd",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_df":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_df",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_dir":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_dir",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_dircolors":{"doc":"","t":[13,13,4,13,8,13,11,11,11,11,11,10,11,5,11,10,10,11,11,11,5,5],"n":["CShell","Display","OutputFmt","Shell","StrUtils","Unknown","borrow","borrow_mut","eq","equivalent","fmt","fnmatch","from","guess_syntax","into","purify","split_two","try_from","try_into","type_id","uu_app","uumain"],"q":["uu_dircolors","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Remove comments and trim whitespace","Like split_whitespace() but only produce 2 components","","","","",""],"i":[1,1,0,1,0,1,1,1,1,1,1,2,1,0,1,2,2,1,1,1,0,0],"f":[null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["outputfmt",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["str",0]],["bool",0]],[[]],[[],["outputfmt",4]],[[]],[[["",0]],["",0]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[],["command",6]],[[],["i32",0]]],"p":[[4,"OutputFmt"],[8,"StrUtils"]]},\
"uu_dirname":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_dirname",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_du":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_du",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_echo":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_echo",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_env":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_env",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_expand":{"doc":"","t":[0,5,5,7,7,7,7],"n":["options","uu_app","uumain","FILES","INITIAL","NO_UTF8","TABS"],"q":["uu_expand","","","uu_expand::options","","",""],"d":["","","","","","",""],"i":[0,0,0,0,0,0,0],"f":[null,[[],["command",6]],[[],["i32",0]],null,null,null,null],"p":[]},\
"uu_expr":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_expr",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_factor":{"doc":"","t":[3,11,11,11,11,11,11,11,5,11,11,11,11,11,0,11,11,0,11,11,11,11,11,5,5,11,5,17,17,17,5,5],"n":["Factors","add","borrow","borrow_mut","clone","clone_into","eq","equivalent","factor","fmt","fmt","from","into","ne","numeric","one","push","table","to_owned","to_string","try_from","try_into","type_id","uu_app","uumain","vzip","gcd","CHUNK_SIZE","NEXT_PRIME","PRIME_INVERSIONS_U64","factor","factor_chunk"],"q":["uu_factor","","","","","","","","","","","","","","","","","","","","","","","","","","uu_factor::numeric","uu_factor::table","","","",""],"d":["","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,0,1,0,0,0,0,0,0],"f":[null,[[["",0],["u64",0],["u8",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["factors",3]],[[["",0],["",0]]],[[["",0],["factors",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["u64",0]],["factors",3]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0],["factors",3]],["bool",0]],null,[[]],[[["",0],["u64",0]]],null,[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[],["command",6]],[[],["i32",0]],[[]],[[["u64",0],["u64",0]],["u64",0]],null,null,null,[[["u64",0],["factors",3]]],[[]]],"p":[[3,"Factors"]]},\
"uu_false":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_false",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_fmt":{"doc":"","t":[6,3,11,11,11,11,11,11,11,5,5],"n":["FileOrStdReader","FmtOptions","borrow","borrow_mut","from","into","try_from","try_into","type_id","uu_app","uumain"],"q":["uu_fmt","","","","","","","","","",""],"d":["","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,0,1,1,1,1,1,1,1,0,0],"f":[null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[],["command",6]],[[],["i32",0]]],"p":[[3,"FmtOptions"]]},\
"uu_fold":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_fold",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_groups":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_groups",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_hashsum":{"doc":"","t":[5,5,5,5,5],"n":["uu_app_b3sum","uu_app_bits","uu_app_common","uu_app_custom","uumain"],"q":["uu_hashsum","","","",""],"d":["","","","",""],"i":[0,0,0,0,0],"f":[[[],["command",6]],[[],["command",6]],[[],["command",6]],[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_head":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_head",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_hostid":{"doc":"","t":[5,5,5],"n":["gethostid","uu_app","uumain"],"q":["uu_hostid","",""],"d":["","",""],"i":[0,0,0],"f":[null,[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_hostname":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_hostname",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_id":{"doc":"","t":[2,5,5],"n":["libc","uu_app","uumain"],"q":["uu_id","",""],"d":["","",""],"i":[0,0,0],"f":[null,[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_install":{"doc":"","t":[3,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5],"n":["Behavior","Directory","MainFunction","Standard","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","equivalent","from","from","into","into","mode","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","uu_app","uumain"],"q":["uu_install","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Create directories","","Install files to locations (primary functionality)","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Determine the mode for chmod after copy.","","","","","","","","",""],"i":[0,1,0,1,2,1,2,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,0,0],"f":[null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["mainfunction",4]],[[["",0],["",0]]],[[["",0],["mainfunction",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[]],[[]],[[]],[[]],[[["",0]],["u32",0]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["command",6]],[[],["i32",0]]],"p":[[4,"MainFunction"],[3,"Behavior"]]},\
"uu_join":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_join",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_kill":{"doc":"","t":[13,13,4,13,11,11,11,11,11,11,0,11,11,11,11,5,5,7,7,7,7],"n":["Kill","List","Mode","Table","borrow","borrow_mut","clone","clone_into","from","into","options","to_owned","try_from","try_into","type_id","uu_app","uumain","LIST","PIDS_OR_SIGNALS","SIGNAL","TABLE"],"q":["uu_kill","","","","","","","","","","","","","","","","","uu_kill::options","","",""],"d":["","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,0,0,0,0,0,0],"f":[null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["mode",4]],[[["",0],["",0]]],[[]],[[]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[],["command",6]],[[],["i32",0]],null,null,null,null],"p":[[4,"Mode"]]},\
"uu_link":{"doc":"","t":[0,5,5,7],"n":["options","uu_app","uumain","FILES"],"q":["uu_link","","","uu_link::options"],"d":["","","",""],"i":[0,0,0,0],"f":[null,[[],["command",6]],[[],["i32",0]],null],"p":[]},\
"uu_ln":{"doc":"","t":[13,13,13,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5],"n":["Force","Interactive","NoClobber","OverwriteMode","Settings","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","equivalent","fmt","from","from","into","into","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","uu_app","uumain"],"q":["uu_ln","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[1,1,1,0,0,2,1,2,1,1,1,1,1,1,2,1,2,1,1,2,1,2,1,2,1,0,0],"f":[null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["overwritemode",4]],[[["",0],["",0]]],[[["",0],["overwritemode",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["command",6]],[[],["i32",0]]],"p":[[4,"OverwriteMode"],[3,"Settings"]]},\
"uu_logname":{"doc":"","t":[5,5,5],"n":["getlogin","uu_app","uumain"],"q":["uu_logname","",""],"d":["","",""],"i":[0,0,0],"f":[null,[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_ls":{"doc":"","t":[13,13,13,3,4,13,13,11,11,11,11,11,11,12,11,11,11,11,11,5,0,12,11,11,11,11,11,11,5,5,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7],"n":["Across","Columns","Commas","Config","Format","Long","OneLine","borrow","borrow","borrow_mut","borrow_mut","eq","equivalent","format","from","from","from","into","into","list","options","quoting_style","try_from","try_from","try_into","try_into","type_id","type_id","uu_app","uumain","AUTHOR","COLOR","CONTEXT","DIRECTORY","DIRED","FORMAT","FULL_TIME","GROUP_DIRECTORIES_FIRST","HELP","HIDE","HIDE_CONTROL_CHARS","IGNORE","IGNORE_BACKUPS","INDICATOR_STYLE","INODE","NO_GROUP","PATHS","QUOTING_STYLE","RECURSIVE","REVERSE","SHOW_CONTROL_CHARS","SORT","TIME","TIME_STYLE","WIDTH","ZERO","dereference","files","format","indicator_style","quoting","size","sort","time","ALL","ARGS","DIR_ARGS","ALL","ALMOST_ALL","ACROSS","COLUMNS","COMMAS","LONG","LONG_NO_GROUP","LONG_NO_OWNER","LONG_NUMERIC_UID_GID","ONE_LINE","TAB_SIZE","CLASSIFY","FILE_TYPE","SLASH","C","ESCAPE","LITERAL","ALLOCATION_SIZE","BLOCK_SIZE","HUMAN_READABLE","KIBIBYTES","SI","EXTENSION","NONE","SIZE","TIME","VERSION","ACCESS","CHANGE"],"q":["uu_ls","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uu_ls::options","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uu_ls::options::dereference","","","uu_ls::options::files","","uu_ls::options::format","","","","","","","","","uu_ls::options::indicator_style","","","uu_ls::options::quoting","","","uu_ls::options::size","","","","","uu_ls::options::sort","","","","","uu_ls::options::time",""],"d":["","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,1,1,0,0,1,1,2,1,2,1,1,1,2,2,2,1,2,1,0,0,2,2,1,2,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["format",4]],["bool",0]],[[["",0],["",0]],["bool",0]],null,[[]],[[["argmatches",3]],["uresult",6]],[[]],[[]],[[]],[[["vec",3,[["path",3]]],["config",3]],["uresult",6]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["command",6]],[[],["i32",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"Format"],[3,"Config"]]},\
"uu_mkdir":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_mkdir",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_mkfifo":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_mkfifo",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_mknod":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_mknod",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_mktemp":{"doc":"","t":[5,5,5],"n":["dry_exec","uu_app","uumain"],"q":["uu_mktemp","",""],"d":["","",""],"i":[0,0,0],"f":[[[["str",0],["str",0],["usize",0],["str",0]],["uresult",6]],[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_more":{"doc":"","t":[0,5,5,17,17,17,17,17,17,17,17,17,17,17,17],"n":["options","uu_app","uumain","CLEAN_PRINT","FILES","FROM_LINE","LINES","LOGICAL","NO_PAUSE","NUMBER","PATTERN","PLAIN","PRINT_OVER","SILENT","SQUEEZE"],"q":["uu_more","","","uu_more::options","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,[[],["command",6]],[[],["i32",0]],null,null,null,null,null,null,null,null,null,null,null,null],"p":[]},\
"uu_mv":{"doc":"","t":[3,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5],"n":["Behavior","Force","Interactive","NoClobber","OverwriteMode","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","equivalent","from","from","into","into","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","uu_app","uumain"],"q":["uu_mv","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,1,1,1,0,2,1,2,1,1,1,1,1,2,1,2,1,1,2,1,2,1,2,1,0,0],"f":[null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["overwritemode",4]],[[["",0],["",0]]],[[["",0],["overwritemode",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[]],[[]],[[]],[[]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["command",6]],[[],["i32",0]]],"p":[[4,"OverwriteMode"],[3,"Behavior"]]},\
"uu_nice":{"doc":"","t":[0,5,5,7,7],"n":["options","uu_app","uumain","ADJUSTMENT","COMMAND"],"q":["uu_nice","","","uu_nice::options",""],"d":["","","","",""],"i":[0,0,0,0,0],"f":[null,[[],["command",6]],[[],["i32",0]],null,null],"p":[]},\
"uu_nl":{"doc":"","t":[3,11,11,11,11,0,11,11,11,5,5,17,17,17,17,17,17,17,17,17,17,17,17,17],"n":["Settings","borrow","borrow_mut","from","into","options","try_from","try_into","type_id","uu_app","uumain","BODY_NUMBERING","FILE","FOOTER_NUMBERING","HEADER_NUMBERING","HELP","JOIN_BLANK_LINES","LINE_INCREMENT","NO_RENUMBER","NUMBER_FORMAT","NUMBER_SEPARATOR","NUMBER_WIDTH","SECTION_DELIMITER","STARTING_LINE_NUMBER"],"q":["uu_nl","","","","","","","","","","","uu_nl::options","","","","","","","","","","","",""],"d":["","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[],["command",6]],[[],["i32",0]],null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"Settings"]]},\
"uu_nohup":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_nohup",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_nproc":{"doc":"","t":[17,5,5],"n":["_SC_NPROCESSORS_CONF","uu_app","uumain"],"q":["uu_nproc","",""],"d":["","",""],"i":[0,0,0],"f":[null,[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_numfmt":{"doc":"","t":[0,0,0,5,5,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,11,11,5,5,11,11,11,11,11,12,11,11,11,17,13,17,17,17,17,17,17,17,3,13,17,17,17,13,3,17,17,4,17,17,17,17,17,13,3,13,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,11,11,11,11,12,11,12,12,12,11,11,11,11,11,12,12,12,12,11,12,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["errors","format","options","uu_app","uumain","FormattingError","IllegalArgument","IoError","NumfmtError","borrow","borrow_mut","code","fmt","fmt","from","into","to_string","try_from","try_into","type_id","0","0","0","WhitespaceSplitter","borrow","borrow_mut","div_round","format_and_print","from","into","into_iter","multiunzip","next","s","try_from","try_into","type_id","DELIMITER","Down","FIELD","FIELD_DEFAULT","FORMAT","FROM","FROM_DEFAULT","FROM_UNIT","FROM_UNIT_DEFAULT","FormatOptions","FromZero","HEADER","HEADER_DEFAULT","NUMBER","Nearest","NumfmtOptions","PADDING","ROUND","RoundMethod","SUFFIX","TO","TO_DEFAULT","TO_UNIT","TO_UNIT_DEFAULT","TowardsZero","TransformOptions","Up","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","delimiter","eq","fields","fmt","format","from","from","from","from","from","from_str","from_unit","grouping","header","into","into","into","into","ne","padding","padding","precision","prefix","round","round","suffix","suffix","to","to_owned","to_unit","transform","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zero_padding"],"q":["uu_numfmt","","","","","uu_numfmt::errors","","","","","","","","","","","","","","","uu_numfmt::errors::NumfmtError","","","uu_numfmt::format","","","","","","","","","","","","","","uu_numfmt::options","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Iterate over a line’s fields, where each field is a …","","","Divide numerator by denominator, with rounding.","Format a line of text according to the selected options.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","Yield the next field in the input string as a tuple …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,2,3,4,0,5,5,0,0,5,5,5,5,5,5,5,5,5,0,6,0,0,0,0,0,0,0,0,6,0,0,0,6,0,0,0,0,0,0,0,0,0,6,0,6,7,8,6,9,7,8,6,9,6,6,9,8,9,8,9,8,7,8,6,9,7,9,7,9,8,7,8,6,9,9,8,9,9,9,6,8,8,9,7,6,7,8,7,8,6,9,7,8,6,9,7,8,6,9,9],"f":[null,null,null,[[],["command",6]],[[],["i32",0]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["i32",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["f64",0],["f64",0],["roundmethod",4]],["f64",0]],[[["str",0],["numfmtoptions",3]],["result",4,[["string",3]]]],[[]],[[]],[[]],[[]],[[["",0]],["option",4]],null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["roundmethod",4]],[[["",0],["",0]]],[[]],null,[[["",0],["formatoptions",3]],["bool",0]],null,[[["",0],["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],null,[[["str",0]],["result",4]],null,null,null,[[]],[[]],[[]],[[]],[[["",0],["formatoptions",3]],["bool",0]],null,null,null,null,[[["",0],["f64",0]],["f64",0]],null,null,null,null,[[["",0]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null],"p":[[4,"NumfmtError"],[13,"IoError"],[13,"IllegalArgument"],[13,"FormattingError"],[3,"WhitespaceSplitter"],[4,"RoundMethod"],[3,"TransformOptions"],[3,"NumfmtOptions"],[3,"FormatOptions"]]},\
"uu_od":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_od",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_paste":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_paste",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_pathchk":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_pathchk",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_pinky":{"doc":"","t":[8,10,5,5],"n":["Capitalize","capitalize","uu_app","uumain"],"q":["uu_pinky","","",""],"d":["","","",""],"i":[0,1,0,0],"f":[null,[[["",0]],["string",3]],[[],["command",6]],[[],["i32",0]]],"p":[[8,"Capitalize"]]},\
"uu_pr":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_pr",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_printenv":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_printenv",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_printf":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_printf",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_ptx":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_ptx",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_pwd":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_pwd",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_readlink":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_readlink",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_realpath":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_realpath",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_relpath":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_relpath",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_rm":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_rm",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_rmdir":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_rmdir",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_runcon":{"doc":"","t":[0,5,5,17,17,17,17,17],"n":["options","uu_app","uumain","COMPUTE","RANGE","ROLE","TYPE","USER"],"q":["uu_runcon","","","uu_runcon::options","","","",""],"d":["","","","","","","",""],"i":[0,0,0,0,0,0,0,0],"f":[null,[[],["command",6]],[[],["i32",0]],null,null,null,null,null],"p":[]},\
"uu_seq":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_seq",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_shred":{"doc":"","t":[0,5,5,17,17,17,17,17,17,17,17],"n":["options","uu_app","uumain","EXACT","FILE","FORCE","ITERATIONS","REMOVE","SIZE","VERBOSE","ZERO"],"q":["uu_shred","","","uu_shred::options","","","","","","",""],"d":["","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0],"f":[null,[[],["command",6]],[[],["i32",0]],null,null,null,null,null,null,null,null],"p":[]},\
"uu_shuf":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_shuf",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_sleep":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_sleep",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_sort":{"doc":"","t":[4,3,13,13,3,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,12],"n":["GeneralF64ParseResult","GlobalSettings","Infinity","Invalid","Line","NaN","NegInfinity","Number","Output","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","ne","partial_cmp","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","uu_app","uumain","vzip","vzip","vzip","vzip","0"],"q":["uu_sort","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uu_sort::GeneralF64ParseResult"],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,0,1,1,1,0,2,3,4,1,2,3,4,1,3,4,1,3,4,1,3,2,3,4,1,2,3,4,1,2,3,4,1,1,4,1,2,3,4,1,2,3,4,1,2,3,4,1,1,1,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,0,0,2,3,4,1,5],"f":[null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["globalsettings",3]],[[["",0]],["line",3]],[[["",0]],["generalf64parseresult",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["",0],["generalf64parseresult",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[["",0],["generalf64parseresult",4]],["bool",0]],[[["",0],["generalf64parseresult",4]],["option",4,[["ordering",4]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["command",6]],[[],["i32",0]],[[]],[[]],[[]],[[]],null],"p":[[4,"GeneralF64ParseResult"],[3,"Output"],[3,"GlobalSettings"],[3,"Line"],[13,"Number"]]},\
"uu_split":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_split",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_stat":{"doc":"","t":[13,13,17,17,17,17,17,17,13,4,8,3,13,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,0,10,10,11,11,11,11,11,11,11,11,11,5,5,12,12,12,12,12,7,7,7,7,7],"n":["Char","Directive","F_ALTER","F_GROUP","F_LEFT","F_SIGN","F_SPACE","F_ZERO","Integer","OutputType","ScanUtil","Stater","Str","Token","Unknown","Unsigned","UnsignedHex","UnsignedOct","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","generate_tokens","group_num","into","into","into","ne","options","scan_char","scan_num","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uu_app","uumain","0","flag","format","precision","width","DEREFERENCE","FILE_SYSTEM","FORMAT","PRINTF","TERSE"],"q":["uu_stat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uu_stat::Token","","","","","uu_stat::options","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,1,0,0,0,0,0,0,2,0,0,0,2,0,2,2,2,2,3,2,1,3,2,1,2,1,2,1,2,1,3,2,1,3,0,3,2,1,1,0,4,4,3,2,1,3,2,1,3,2,1,0,0,5,6,6,6,6,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["outputtype",4]],["bool",0]],[[["",0],["token",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["str",0],["bool",0]],["uresult",6,[["vec",3,[["token",4]]]]]],[[["str",0]],["cow",4,[["str",0]]]],[[]],[[]],[[]],[[["",0],["token",4]],["bool",0]],null,[[["",0],["u32",0]],["option",4]],[[["",0]],["option",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["command",6]],[[],["i32",0]],null,null,null,null,null,null,null,null,null,null],"p":[[4,"Token"],[4,"OutputType"],[3,"Stater"],[8,"ScanUtil"],[13,"Char"],[13,"Directive"]]},\
"uu_stdbuf":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_stdbuf",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_sum":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_sum",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_sync":{"doc":"","t":[0,5,5,7,7],"n":["options","uu_app","uumain","DATA","FILE_SYSTEM"],"q":["uu_sync","","","uu_sync::options",""],"d":["","","","",""],"i":[0,0,0,0,0],"f":[null,[[],["command",6]],[[],["i32",0]],null,null],"p":[]},\
"uu_tac":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_tac",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_tail":{"doc":"","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,0,5,5,0,11,11,11,11,11,11,5,5,7,7,7,7,7,7,7,7,7,7,7,7,7,0,7,7,7,7,7,7,7,7,7,7],"n":["PathData","Settings","borrow","borrow","borrow_mut","borrow_mut","default","fmt","from","from","from","into","into","options","stdin_is_bad_fd","stdin_is_pipe_or_fifo","text","try_from","try_from","try_into","try_into","type_id","type_id","uu_app","uumain","ARG_FILES","BYTES","DISABLE_INOTIFY_TERM","FOLLOW","FOLLOW_RETRY","LINES","MAX_UNCHANGED_STATS","PID","PRESUME_INPUT_PIPE","RETRY","SLEEP_INT","USE_POLLING","ZERO_TERM","verbosity","QUIET","VERBOSE","BACKEND","BAD_FD","BECOME_INACCESSIBLE","DASH","DEV_STDIN","NO_FILES_REMAINING","NO_SUCH_FILE","STDIN_HEADER"],"q":["uu_tail","","","","","","","","","","","","","","","","","","","","","","","","","uu_tail::options","","","","","","","","","","","","","","uu_tail::options::verbosity","","uu_tail::text","","","","","","",""],"d":["Data structure to keep a handle on the BufReader, Metadata …","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,2,1,2,2,2,1,2,2,1,2,0,0,0,0,1,2,1,2,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[],["settings",3]],[[["",0],["formatter",3]],["result",6]],[[]],[[["argmatches",3]],["uresult",6]],[[]],[[]],[[]],null,[[],["bool",0]],[[],["bool",0]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["command",6]],[[],["i32",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"PathData"],[3,"Settings"]]},\
"uu_tee":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_tee",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_test":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_test",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_timeout":{"doc":"","t":[0,5,5,7,7,7,7,7,7,7],"n":["options","uu_app","uumain","COMMAND","DURATION","FOREGROUND","KILL_AFTER","PRESERVE_STATUS","SIGNAL","VERBOSE"],"q":["uu_timeout","","","uu_timeout::options","","","","","",""],"d":["","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0],"f":[null,[[],["command",6]],[[],["i32",0]],null,null,null,null,null,null,null],"p":[]},\
"uu_touch":{"doc":"","t":[0,5,5,7,7,7,7,7,7,7,0,7,7,7],"n":["options","uu_app","uumain","ACCESS","HELP","MODIFICATION","NO_CREATE","NO_DEREF","SOURCES","TIME","sources","CURRENT","DATE","REFERENCE"],"q":["uu_touch","","","uu_touch::options","","","","","","","","uu_touch::options::sources","",""],"d":["","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,[[],["command",6]],[[],["i32",0]],null,null,null,null,null,null,null,null,null,null,null],"p":[]},\
"uu_tr":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_tr",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_true":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_true",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_truncate":{"doc":"","t":[0,5,5,7,7,7,7,7],"n":["options","uu_app","uumain","ARG_FILES","IO_BLOCKS","NO_CREATE","REFERENCE","SIZE"],"q":["uu_truncate","","","uu_truncate::options","","","",""],"d":["","","","","","","",""],"i":[0,0,0,0,0,0,0,0],"f":[null,[[],["command",6]],[[],["i32",0]],null,null,null,null,null],"p":[]},\
"uu_tsort":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_tsort",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_tty":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_tty",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_uname":{"doc":"","t":[0,5,5,7,7,7,7,7,7,7,7,7],"n":["options","uu_app","uumain","ALL","HWPLATFORM","KERNELNAME","KERNELRELEASE","KERNELVERSION","MACHINE","NODENAME","OS","PROCESSOR"],"q":["uu_uname","","","uu_uname::options","","","","","","","",""],"d":["","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,[[],["command",6]],[[],["i32",0]],null,null,null,null,null,null,null,null,null],"p":[]},\
"uu_unexpand":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_unexpand",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_uniq":{"doc":"","t":[0,5,5,7,7,7,7,7,7,7,7,7,7],"n":["options","uu_app","uumain","ALL_REPEATED","CHECK_CHARS","COUNT","GROUP","IGNORE_CASE","REPEATED","SKIP_CHARS","SKIP_FIELDS","UNIQUE","ZERO_TERMINATED"],"q":["uu_uniq","","","uu_uniq::options","","","","","","","","",""],"d":["","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,[[],["command",6]],[[],["i32",0]],null,null,null,null,null,null,null,null,null,null],"p":[]},\
"uu_unlink":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_unlink",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_uptime":{"doc":"","t":[2,0,5,5,7],"n":["libc","options","uu_app","uumain","SINCE"],"q":["uu_uptime","","","","uu_uptime::options"],"d":["","","","",""],"i":[0,0,0,0,0],"f":[null,null,[[],["command",6]],[[],["i32",0]],null],"p":[]},\
"uu_users":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_users",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_vdir":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_vdir",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_wc":{"doc":"","t":[0,5,5,7,7,7,7,7,7],"n":["options","uu_app","uumain","BYTES","CHAR","FILES0_FROM","LINES","MAX_LINE_LENGTH","WORDS"],"q":["uu_wc","","","uu_wc::options","","","","",""],"d":["","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0],"f":[null,[[],["command",6]],[[],["i32",0]],null,null,null,null,null,null],"p":[]},\
"uu_who":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_who",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_whoami":{"doc":"","t":[5,5],"n":["uu_app","uumain"],"q":["uu_whoami",""],"d":["",""],"i":[0,0],"f":[[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uu_yes":{"doc":"","t":[5,5,5],"n":["exec","uu_app","uumain"],"q":["uu_yes","",""],"d":["","",""],"i":[0,0,0],"f":[[[],["result",6]],[[],["command",6]],[[],["i32",0]]],"p":[]},\
"uucore":{"doc":"","t":[8,13,4,13,13,4,13,13,11,5,0,14,11,11,11,11,11,11,14,14,0,0,0,0,5,11,11,5,11,11,0,0,5,14,11,11,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,5,14,14,14,14,14,14,0,11,11,11,11,11,11,14,5,0,0,12,12,13,7,7,4,13,4,13,13,13,13,13,0,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,7,7,7,5,5,5,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,10,11,11,11,11,11,13,13,13,13,13,13,13,3,13,4,6,13,4,4,13,13,13,11,11,11,11,11,11,11,11,11,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,12,12,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,12,5,5,11,11,10,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,5,12,12,12,12,5,12,3,3,8,8,8,3,6,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,10,12,12,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,10,13,3,13,13,4,13,13,13,4,11,11,11,11,11,11,5,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,5,11,11,11,11,5,5,5,11,5,5,11,11,11,11,11,11,11,11,11,11,11,8,8,3,3,3,5,10,11,12,12,12,10,10,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,10,11,10,11,11,11,11,10,11,12,10,11,11,11,11,11,10,11,12,12,12,10,11,11,11,10,5,5,5,5,12,5,3,5,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,5,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,13,13,4,13,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,12,12,12,5,13,13,13,3,13,13,4,13,13,13,4,13,13,13,3,4,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,12,12,12,0,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,0,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,12,12,12,12,3,8,3,5,5,12,12,5,5,10,12,12,12,5,12,12,12,12,5,17,17,17,17,17,17,17,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,6,6,5,5,5,5,8,13,4,13,11,11,11,11,11,11,11,11,11,11,5,5,5,5,11,11,10,11,11,11,11,11,11,11,10,12,12,13,13,13,13,4,4,13,13,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,3,11,11,11,5,5,11,11,11,11,11,11,12,11,12,11,11,11,11,11,3,11,11,12,11,11,11,11,11,11,11,11,7,7,5,5,5,17,17,17,7,17,17,17,17,17,17,17,17,17,17,17,3,3,11,11,11,11,11,11,5,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,5,5],"n":["Args","Complete","ConversionResult","ConvertLossy","Ignore","InvalidEncodingHandling","Lossy","Panic","accept_any","args_os","backup_control","bin","borrow","borrow","borrow_mut","borrow_mut","collect_str","collect_str_lossy","crash","crash_if_err","display","encoding","entries","error","execution_phrase","expect_complete","expect_lossy","format_usage","from","from","fs","fsext","get_utility_is_second_arg","has","into","into","lines","main","memo","mode","os","panic","parse_glob","parse_size","parse_time","perms","pipes","process","quoting_style","ranges","ringbuffer","set_utility_is_second_arg","show","show_error","show_error_custom_description","show_if_err","show_usage_error","show_warning","signals","try_from","try_from","try_into","try_into","type_id","type_id","uio_error","util_name","utmpx","version_cmp","0","0","AmbiguousArgument","BACKUP_CONTROL_LONG_HELP","BACKUP_CONTROL_VALUES","BackupError","BackupImpossible","BackupMode","ExistingBackup","InvalidArgument","NoBackup","NumberedBackup","SimpleBackup","arguments","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","code","determine_backup_mode","determine_backup_suffix","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","get_backup_path","into","into","ne","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","usage","0","0","1","1","OPT_BACKUP","OPT_BACKUP_NO_ARG","OPT_SUFFIX","backup","backup_no_args","suffix","Quotable","Quoted","borrow","borrow_mut","clone","clone_into","external","fmt","fmt","force","from","from","into","maybe_quote","maybe_quote","native","native_raw","print_verbatim","println_verbatim","quote","to_owned","to_string","try_from","try_into","type_id","Base16","Base2Lsbf","Base2Msbf","Base32","Base32Hex","Base64","Base64Url","Data","Decode","DecodeError","DecodeResult","DecodeZ85","EncodeError","Format","Io","Z85","Z85InputLenNotMultipleOf4","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","decode","decode","encode","encode","fmt","fmt","from","from","from","from","from","from","from","ignore_garbage","into","into","into","into","line_wrap","new","source","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wrap_print","wrap_write","0","0","0","Group","Locate","Passwd","belongs_to","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","from","from","get_groups","get_groups_gnu","gid","gid","gid2grp","grp2gid","into","into","locate","locate","locate","locate","locate","name","name","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","uid","uid2usr","user_dir","user_info","user_passwd","user_shell","usr2uid","0","ClapErrorWrapper","ExitCode","FromIo","UClapError","UError","UIoError","UResult","USimpleError","UUsageError","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","code","code","code","code","code","code","code","code","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_exit_code","into","into","into","into","into","map_err_context","message","message","new","new","new","new","set_exit_code","strip_errno","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","uio_error","usage","usage","usage","with_exit_code","Existing","FileInformation","Logical","Missing","MissingHandling","None","Normal","Physical","ResolveMode","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","canonicalize","clone","clone","clone_into","clone_into","dir_strip_dot_for_creation","display_permissions","display_permissions_unix","eq","eq","eq","equivalent","equivalent","equivalent","file_size","fmt","fmt","from","from","from","from_file","from_path","has","hash","infos_refer_to_same_file","inode","into","into","into","is_symlink","make_path_relative_to","normalize_path","number_of_links","paths_refer_to_same_file","resolve_relative_path","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","BirthTime","FsMeta","FsUsage","MountInfo","StatFs","StatFs","avail_blocks","avail_blocks","bavail","bavail_top_bit_set","bfree","birth","block_size","block_size","blocks","blocksize","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","dev_id","dev_name","dummy","eq","equivalent","f_bavail","f_bavail","f_bfree","f_bfree","f_blocks","f_blocks","f_bsize","f_bsize","f_ffree","f_ffree","f_files","f_files","f_frsize","f_frsize","f_fsid","f_fsid","f_namelen","f_namelen","f_type","f_type","ffree","files","fmt","fmt","fmt","free_blocks","free_blocks","free_file_nodes","free_file_nodes","from","from","from","fs_type","fs_type","fs_type","fsid","fsid","hash","into","into","into","io_size","io_size","mount_dir","mount_option","mount_root","namelen","namelen","ne","new","pretty_birth","pretty_filetype","pretty_fstype","pretty_time","read_fs_list","remote","statfs","statfs_fn","statfs_fn","to_owned","to_owned","to_owned","total_blocks","total_blocks","total_file_nodes","total_file_nodes","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Lines","borrow","borrow_mut","from","into","into_iter","lines","next","try_from","try_into","type_id","Memo","apply","borrow","borrow_mut","from","into","new","run_all","try_from","try_into","type_id","get_umask","parse_mode","parse_numeric","parse_symbolic","strip_minus_from_mode","is_wsl_1","is_wsl_2","mute_sigpipe_panic","from_str","InvalidSuffix","ParseFailure","ParseSizeError","SizeTooBig","borrow","borrow_mut","description","eq","equivalent","fmt","fmt","from","into","ne","parse_size","to_string","try_from","try_into","type_id","0","0","0","from_str","All","All","Changes","ChownExecutor","First","Group","IfFrom","None","Normal","Silent","TraverseSymlinks","User","UserGroup","Verbose","Verbosity","VerbosityLevel","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chown_base","clone","clone","clone_into","clone_into","dereference","dest_gid","dest_uid","entries","eq","eq","eq","equivalent","equivalent","equivalent","exec","files","filter","fmt","fmt","from","from","from","from","from","groups_only","into","into","into","into","into","level","ne","options","preserve_root","recursive","to_owned","to_owned","traverse_symlinks","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","verbosity","wrap_chown","0","0","0","1","Group","Locate","Passwd","get_groups","get_groups_gnu","gid","gid","gid2grp","grp2gid","locate","name","name","uid","uid2usr","user_dir","user_info","user_passwd","user_shell","usr2uid","ARG_FILES","ARG_GROUP","ARG_OWNER","FROM","HELP","RECURSIVE","REFERENCE","dereference","preserve_root","traverse","verbosity","DEREFERENCE","NO_DEREFERENCE","NO_PRESERVE","PRESERVE","EVERY","NO_TRAVERSE","TRAVERSE","CHANGES","QUIET","SILENT","VERBOSE","Error","Result","pipe","splice","splice_exact","vmsplice","ChildExt","Code","ExitStatus","Signal","borrow","borrow_mut","clone","clone_into","code","eq","equivalent","fmt","fmt","from","getegid","geteuid","getgid","getuid","into","ne","send_signal","signal","success","to_owned","to_string","try_from","try_into","type_id","wait_or_timeout","0","0","C","Double","Literal","None","Quotes","QuotingStyle","Shell","Single","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","escape_name","from","from","into","into","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","always_quote","escape","quotes","show_control","show_control","Range","borrow","borrow_mut","cmp","complement","contain","eq","equivalent","fmt","from","from_list","from_str","high","into","low","ne","partial_cmp","try_from","try_into","type_id","RingBuffer","borrow","borrow_mut","data","from","from_iter","into","new","push_back","try_from","try_into","type_id","ALL_SIGNALS","DEFAULT_SIGNAL","is_signal","signal_by_name_or_value","signal_name_by_value","ACCOUNTING","BOOT_TIME","DEAD_PROCESS","DEFAULT_FILE","EMPTY","INIT_PROCESS","LOGIN_PROCESS","NEW_TIME","OLD_TIME","RUN_LVL","USER_PROCESS","UT_HOSTSIZE","UT_IDSIZE","UT_LINESIZE","UT_NAMESIZE","Utmpx","UtmpxIter","borrow","borrow","borrow_mut","borrow_mut","canon_host","drop","endutxent","exit_status","from","from","getutxent","host","into","into","into_inner","into_iter","is_user_process","iter_all_records","iter_all_records_from","login_time","next","pid","record_type","setutxent","terminal_suffix","try_from","try_from","try_into","try_into","tty_device","type_id","type_id","user","utmpxname","version_cmp"],"q":["uucore","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uucore::ConversionResult","","uucore::backup_control","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uucore::backup_control::BackupError","","","","uucore::backup_control::arguments","","","","","","uucore::display","","","","","","","","","","","","","","","","","","","","","","","","","uucore::encoding","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uucore::encoding::DecodeError","","","uucore::entries","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uucore::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uucore::fs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uucore::fsext","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uucore::lines","","","","","","","","","","","uucore::memo","","","","","","","","","","","uucore::mode","","","","","uucore::os","","uucore::panic","uucore::parse_glob","uucore::parse_size","","","","","","","","","","","","","","","","","","","uucore::parse_size::ParseSizeError","","","uucore::parse_time","uucore::perms","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uucore::perms::IfFrom","","","","uucore::perms::entries","","","","","","","","","","","","","","","","","","","uucore::perms::options","","","","","","","","","","","uucore::perms::options::dereference","","uucore::perms::options::preserve_root","","uucore::perms::options::traverse","","","uucore::perms::options::verbosity","","","","uucore::pipes","","","","","","uucore::process","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uucore::process::ExitStatus","","uucore::quoting_style","","","","","","","","","","","","","","","","","","","","","","","","","","uucore::quoting_style::QuotingStyle","","","","","uucore::ranges","","","","","","","","","","","","","","","","","","","","uucore::ringbuffer","","","","","","","","","","","","uucore::signals","","","","","uucore::utmpx","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uucore::version_cmp"],"d":["","","","","","","","","","","Implement GNU-style backup functionality.","","","","","","Converts each iterator item to a String and collects these …","convenience function for a more slim interface","Display an error and <code>std::process::exit</code>","Unwrap a <code>std::result::Result</code>, crashing instead of …","","","Get password/group file entry","All utils return exit with an exit code. Usually, the …","Derive the complete execution phrase for “usage”.","","","Generate the usage string for clap.","Returns the argument unchanged.","Returns the argument unchanged.","Set of functions to manage files and symlinks","Set of functions to manage file systems","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterate over lines, including the line ending character(s).","","Memo runner of printf Takes a format string and arguments","Set of functions to parse modes","","Custom panic hooks that allow silencing certain types of …","Parsing a glob Pattern from a string.","","Parsing a duration from a string.","Common functions to manage permissions","","Set of functions to manage IDs","","","A fixed-size ring buffer.","","Display a <code>crate::error::UError</code> and set global exit code.","Show an error to stderr in a similar style to GNU …","Show a warning to stderr in a similar style to GNU …","Display an error and set global exit code in error case.","Show a bad invocation help message in a similar style to …","Print a warning message to stderr.","","","","","","","","Shorthand to construct <code>UIoError</code>-instances.","Derive the utility name.","Aims to provide platform-independent methods to obtain …","","","","An ambiguous argument (e.g. ‘n’) was given as backup …","","","Backup error types.","Currently unused","Available backup modes.","Argument ‘existing’, ‘nil’","An invalid argument (e.g. ‘foo’) was given as backup …","Argument ‘none’, ‘off’","Argument ‘numbered’, ‘t’","Argument ‘simple’, ‘never’","Arguments for backup-related functionality.","","","","","","","","Determine the “mode” for the backup operation to …","Obtain the suffix to use for a backup.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","‘–backup’ argument","‘-b’ argument","‘-S, –suffix’ argument","An extension trait to apply quoting to strings.","A wrapper around string types for displaying with quoting …","","","","","When quoting for PowerShell, toggle whether to quote for …","","","Toggle forced quoting. If <code>true</code>, quotes are added even if …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Like <code>quote()</code>, but don’t actually add quotes unless …","Like <code>quote()</code>, but don’t actually add quotes unless …","Quote a string with the default style for the platform.","Quote an <code>OsStr</code> with the default style for the platform.","Like <code>println_verbatim</code>, without the trailing newline.","Print a path (or <code>OsStr</code>-like object) directly to stdout, …","Returns an object that implements <code>Display</code> for printing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Fetch desired entry.","","This is a wrapper function for <code>libc::getgrouplist</code>.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","From: …","The list of group IDs returned from GNU’s <code>groups</code> and GNU…","AKA passwd.pw_gid","AKA group.gr_gid","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","AKA passwd.pw_name","AKA group.gr_name","","","","","","","","","AKA passwd.pw_uid","","AKA passwd.pw_dir","AKA passwd.pw_gecos","AKA passwd.pw_passwd","AKA passwd.pw_shell","","","A wrapper for <code>clap::Error</code> that implements <code>UError</code>","A special error type that does not print any message when …","Enables the conversion from <code>std::io::Error</code> to <code>UError</code> and …","Extension trait for <code>clap::Error</code> to adjust the exit code.","Custom errors defined by the utils and <code>uucore</code>.","Wrapper type around <code>std::io::Error</code>.","Result type that should be returned by all utils.","A simple error type with an exit code and a message that …","","","","","","","","","","","","Error code of a custom error.","Error code of a custom error.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the last exit code set with <code>set_exit_code</code>. The default …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Set the exit code for the program if <code>uumain</code> returns <code>Ok(())</code>.","Strip the trailing “ (os error XX)“ from io error …","","","","","","","","","","","","","","","","","","","","","Shorthand to construct <code>UIoError</code>-instances.","Print usage help to a custom error.","Print usage help to a custom error.","","","Resolve symbolic links, ignoring errors on the final …","Information to uniquely identify a file","Resolve ‘..’ elements before symlinks","Resolve symbolic links, ignoring errors on the non-final …","Controls how symbolic links should be handled when …","Do not resolve any symbolic links.","Return an error if any part of the path is missing.","Resolve symlinks as encountered when processing the path","Controls when symbolic links are resolved","","","","","","","Return the canonical, absolute form of a path.","","","","","For some programs like install or mkdir, dir/. can be …","Display the permissions of a file On non unix like system, …","Display the permissions of a file on a unix like system","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get information from a currently open file","Get information for a given path.","","","Checks if <code>p1</code> and <code>p2</code> are the same file information. If …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Decide whether the given path is a symbolic link.","Converts absolute <code>path</code> to be relative to absolute <code>to</code> path.","Normalize a path by removing relative information For …","","Checks if <code>p1</code> and <code>p2</code> are the same file. If error happens …","resolve a relative path","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Read file system list.","","","","","","","","","","","","","","","","","","","","","An iterator over the lines of an instance of <code>BufRead</code>.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Returns an iterator over the lines, including line ending …","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Test if the program is running under WSL","","Terminate without error on panics that occur due to broken …","Parse a glob Pattern from a string.","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Parse a size string into a number of bytes.","","","","","","","","Parse a duration from a string.","","","","","","","","","","","","","","","","The various level of verbosity","","","","","","","","","","","Base implementation for <code>chgrp</code> and <code>chown</code>.","","","","","","","","Get password/group file entry","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Perform the change of owner on a path with the various …","","","","","","Fetch desired entry.","","From: …","The list of group IDs returned from GNU’s <code>groups</code> and GNU…","AKA passwd.pw_gid","AKA group.gr_gid","","","","AKA passwd.pw_name","AKA group.gr_name","AKA passwd.pw_uid","","AKA passwd.pw_dir","AKA passwd.pw_gecos","AKA passwd.pw_passwd","AKA passwd.pw_shell","","","","","","","","","","","","","","","","","","","","","","","","Nix’s main error type.","Nix Result Type","A wrapper around <code>nix::unistd::pipe</code> that ensures the pipe …","Less noisy wrapper around <code>nix::fcntl::splice</code>.","Splice wrapper which fully finishes the write.","Copy data from <code>bytes</code> into <code>target</code>, which must be a pipe.","Missing methods for Child objects","","","","","","","","","","","","","Returns the argument unchanged.","<code>getegid()</code> returns the effective group ID of the calling …","<code>geteuid()</code> returns the effective user ID of the calling …","<code>getgid()</code> returns the real group ID of the calling process.","<code>getuid()</code> returns the real user ID of the calling process.","Calls <code>U::from(self)</code>.","","Send a signal to a Child process.","","","","","","","","Wait for a process to finish or return after the specified …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Test if at least one of the given Ranges contain the …","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","A fixed-size ring buffer backed by a <code>VecDeque</code>.","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Append a value to the end of the ring buffer.","","","","","","","","","","","","","","","","","","","","","","","","","Iterator of login records","","","","","Canonicalize host name using DNS","","","A.K.A. ut.ut_exit","Returns the argument unchanged.","Returns the argument unchanged.","","A.K.A. ut.ut_host","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the <code>Utmpx</code>, returning the underlying C struct utmpx","","","Iterate through all the utmp records.","Iterate through all the utmp records from a specific file.","A.K.A. ut.ut_tv","","A.K.A. ut.ut_pid","A.K.A. ut.ut_type","","A.K.A. ut.ut_id","","","","","A.K.A. ut.ut_line","","","A.K.A. ut.ut_user","",""],"i":[0,1,0,2,2,0,1,2,1,0,0,0,2,1,2,1,3,3,0,0,0,0,0,0,0,1,1,0,2,1,0,0,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,2,1,2,1,0,0,0,0,4,5,6,0,0,0,6,0,7,6,7,7,7,0,7,6,7,6,7,7,6,0,0,7,6,7,6,7,6,6,7,6,0,7,6,6,7,6,7,6,7,6,7,6,6,8,9,8,9,0,0,0,0,0,0,0,0,10,10,10,10,10,10,10,10,10,10,10,11,11,10,10,0,0,11,10,10,10,10,10,12,12,12,12,12,12,12,0,13,0,0,13,0,0,13,12,14,14,15,13,12,14,15,13,12,12,12,0,15,0,15,13,13,14,15,13,13,13,13,12,15,14,15,13,12,15,15,13,12,13,14,15,13,12,14,15,13,12,14,15,13,12,0,0,16,17,18,0,0,0,19,19,20,19,20,19,20,19,20,19,20,19,20,0,0,19,20,0,0,19,20,21,19,19,20,20,19,20,19,20,19,20,19,20,19,20,19,0,19,19,19,19,0,22,0,0,0,0,0,0,0,0,0,23,24,25,22,26,23,24,25,22,26,27,27,23,24,22,26,23,24,23,23,24,24,25,25,22,22,26,26,23,24,25,25,22,26,0,23,24,25,22,26,28,23,24,23,24,25,22,0,0,23,24,25,22,26,23,24,25,22,26,23,24,25,22,26,23,24,25,22,26,0,27,27,24,29,30,0,31,30,0,31,30,31,0,32,30,31,32,30,31,0,30,31,30,31,0,0,0,32,30,31,32,30,31,32,30,31,32,30,31,32,32,0,32,0,32,32,30,31,0,0,0,32,0,0,30,31,32,30,31,32,30,31,32,30,31,0,0,0,0,0,0,33,34,35,35,35,36,33,34,35,35,37,35,34,37,35,34,37,35,34,37,35,34,37,37,37,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,35,35,37,35,34,33,34,33,34,37,35,34,33,34,37,33,34,34,37,35,34,33,34,37,37,37,33,34,34,35,36,0,0,0,0,37,0,0,0,37,35,34,33,34,33,34,37,35,34,37,35,34,37,35,34,0,38,38,38,38,38,0,38,38,38,38,0,39,39,39,39,39,39,39,39,39,39,0,0,0,0,0,0,0,0,0,40,40,0,40,40,40,40,40,40,40,40,40,40,40,0,40,40,40,40,41,42,43,0,44,45,46,0,45,44,0,45,46,46,0,44,44,46,0,0,44,47,46,48,45,44,47,46,48,45,0,46,48,46,48,47,47,47,0,46,48,45,46,48,45,47,47,47,46,48,44,47,46,48,45,48,44,47,46,48,45,48,48,0,47,47,46,48,47,44,47,46,48,45,44,47,46,48,45,44,47,46,48,45,47,0,49,50,51,51,0,0,0,0,0,19,20,0,0,21,19,20,19,0,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,0,52,52,52,52,52,52,52,52,52,52,52,0,0,0,0,52,52,53,52,52,52,52,52,52,52,53,54,55,56,57,56,57,0,0,56,57,56,57,56,57,57,57,0,56,57,56,57,57,56,57,56,57,56,57,58,58,59,58,60,0,61,61,61,0,0,61,61,61,61,61,61,61,61,61,61,61,61,61,61,0,62,62,62,62,62,62,62,62,62,62,62,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,64,63,64,63,64,0,63,63,64,0,63,63,64,63,64,63,63,63,63,64,63,63,0,63,63,64,63,64,63,63,64,63,0,0],"f":[null,null,null,null,null,null,null,null,[[],["vec",3,[["string",3]]]],[[]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["invalidencodinghandling",4]],["conversionresult",4]],[[],["conversionresult",4]],null,null,null,null,null,null,[[],["str",0]],[[["str",0]],["vec",3,[["string",3]]]],[[["str",0]],["vec",3,[["string",3]]]],[[["str",0]],["str",0]],[[]],[[]],null,null,[[],["bool",0]],null,[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[],["str",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["backupmode",4]],[[["",0],["",0]]],[[["",0]],["i32",0]],[[["argmatches",3]],["uresult",6,[["backupmode",4]]]],[[["argmatches",3]],["string",3]],[[["",0],["backupmode",4]],["bool",0]],[[["",0],["backuperror",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["backupmode",4],["path",3],["str",0]],["option",4,[["pathbuf",3]]]],[[]],[[]],[[["",0],["backuperror",4]],["bool",0]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["bool",0]],null,null,null,null,null,null,null,[[],["arg",3]],[[],["arg",3]],[[],["arg",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["quoted",3]],[[["",0],["",0]]],[[["bool",0]],["quoted",3]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["bool",0]],["quoted",3]],[[["",0]],["quoted",3]],[[]],[[]],[[["",0]],["quoted",3]],[[["",0]],["quoted",3]],[[["str",0]],["quoted",3]],[[["osstr",3]],["quoted",3]],[[["asref",8,[["osstr",3]]]],["result",6]],[[["asref",8,[["osstr",3]]]],["result",6]],[[["",0]],["quoted",3]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["format",4]],[[["",0],["",0]]],[[["format",4]],["decoderesult",6]],[[["",0]],["decoderesult",6]],[[["format",4]],["result",4,[["string",3],["encodeerror",4]]]],[[["",0]],["result",4,[["string",3],["encodeerror",4]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["error",3]]],[[["decodeerror",4]]],[[["decodeerror",3]]],[[]],[[]],[[["bool",0]]],[[]],[[]],[[]],[[]],[[["usize",0]]],[[["format",4]]],[[["",0]],["option",4,[["error",8]]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["data",3],["str",0]]],[[["write",8],["usize",0],["str",0]],["result",6]],null,null,null,null,null,null,[[["",0]],["vec",3,[["gid_t",6]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["passwd",3]],[[["",0]],["group",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[],["ioresult",6,[["vec",3,[["gid_t",6]]]]]],[[["option",4,[["u32",0]]]],["ioresult",6,[["vec",3,[["gid_t",6]]]]]],null,null,[[["gid_t",6]],["ioresult",6,[["string",3]]]],[[["str",0]],["ioresult",6,[["gid_t",6]]]],[[]],[[]],[[],["ioresult",6]],[[["str",0]],["ioresult",6]],[[["uid_t",6]],["ioresult",6]],[[["str",0]],["ioresult",6]],[[["gid_t",6]],["ioresult",6]],null,null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["uid_t",6]],["ioresult",6,[["string",3]]]],null,null,null,null,[[["str",0]],["ioresult",6,[["uid_t",6]]]],null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["i32",0]],[[["",0]],["i32",0]],[[["",0]],["i32",0]],[[["",0]],["i32",0]],[[["",0]],["i32",0]],[[["",0]],["i32",0]],null,null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["error",3]]],[[]],[[]],[[]],[[],["i32",0]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["i32",0],["into",8,[["string",3]]]],["box",3,[["uerror",8]]]],[[["i32",0],["into",8,[["string",3]]]],["box",3,[["uerror",8]]]],[[["errorkind",4],["into",8,[["string",3]]]],["box",3,[["uerror",8]]]],[[["i32",0]],["box",3,[["uerror",8]]]],[[["i32",0]]],[[["error",3]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["i32",0]]],null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["asref",8,[["path",3]]],["missinghandling",4],["resolvemode",4]],["ioresult",6,[["pathbuf",3]]]],[[["",0]],["missinghandling",4]],[[["",0]],["resolvemode",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["path",3]],["pathbuf",3]],[[["metadata",3],["bool",0]],["string",3]],[[["mode_t",6],["bool",0]],["string",3]],[[["",0],["",0]],["bool",0]],[[["",0],["missinghandling",4]],["bool",0]],[[["",0],["resolvemode",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0]],["u64",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["ioresult",6]],[[["bool",0]],["ioresult",6]],null,[[["",0],["",0]]],[[["ioresult",6,[["fileinformation",3]]],["ioresult",6,[["fileinformation",3]]]],["bool",0]],[[["",0]],["u64",0]],[[]],[[]],[[]],[[["asref",8,[["path",3]]]],["bool",0]],[[["asref",8,[["path",3]]],["asref",8,[["path",3]]]],["pathbuf",3]],[[["path",3]],["pathbuf",3]],[[["",0]],["u64",0]],[[["asref",8,[["path",3]]],["asref",8,[["path",3]]],["bool",0]],["bool",0]],[[["path",3]],["cow",4,[["path",3]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,[[],["i32",0]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],null,null,null,[[["",0]],["string",3]],[[["",0]],["i64",0]],[[["",0]],["i64",0]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["mountinfo",3]],[[["",0]],["fsusage",3]],[[["",0]],["statfs",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,[[["",0],["statfs",3]],["bool",0]],[[["",0],["",0]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[]],[[]],[[]],[[["",0]],["i64",0]],[[["",0]],["i64",0]],null,[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[["",0],["",0]]],[[]],[[]],[[]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],null,null,null,[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[["",0],["statfs",3]],["bool",0]],[[["statfs",3]]],[[["",0]],["string",3]],[[["mode_t",6],["u64",0]],["str",0]],[[["i64",0]],["cow",4,[["str",0]]]],[[["i64",0],["i64",0]],["string",3]],[[],["result",4,[["vec",3,[["mountinfo",3]]],["error",3]]]],null,[[],["result",4,[["statfs",3],["string",3]]]],null,[[],["i32",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[["u8",0]],["lines",3]],[[["",0]],["option",4,[["result",6,[["vec",3,[["u8",0]]]]]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0],["peekable",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[["str",0],["peekable",3]],["uresult",6]],[[["str",0]],["uresult",6]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[],["u32",0]],[[["str",0]],["result",4,[["mode_t",6],["string",3]]]],[[["u32",0],["str",0],["bool",0]],["result",4,[["u32",0],["string",3]]]],[[["u32",0],["str",0],["u32",0],["bool",0]],["result",4,[["u32",0],["string",3]]]],[[["vec",3]],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[]],[[["str",0]],["result",4,[["pattern",3],["patternerror",3]]]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["str",0]],[[["",0],["parsesizeerror",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0],["parsesizeerror",4]],["bool",0]],[[["str",0]],["result",4,[["u64",0],["parsesizeerror",4]]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,[[["str",0]],["result",4,[["duration",3],["string",3]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["command",6],["str",0],["bool",0]],["uresult",6]],[[["",0]],["verbositylevel",4]],[[["",0]],["verbosity",3]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,null,[[["",0],["verbositylevel",4]],["bool",0]],[[["",0],["verbosity",3]],["bool",0]],[[["",0],["traversesymlinks",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0]],["uresult",6]],null,null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],null,[[["",0],["verbosity",3]],["bool",0]],null,null,null,[[["",0]]],[[["",0]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["asref",8,[["path",3]]],["metadata",3],["option",4,[["u32",0]]],["option",4,[["u32",0]]],["bool",0],["verbosity",3]],["result",4,[["string",3],["string",3]]]],null,null,null,null,null,null,null,[[],["ioresult",6,[["vec",3,[["gid_t",6]]]]]],[[["option",4,[["u32",0]]]],["ioresult",6,[["vec",3,[["gid_t",6]]]]]],null,null,[[["gid_t",6]],["ioresult",6,[["string",3]]]],[[["str",0]],["ioresult",6,[["gid_t",6]]]],[[],["ioresult",6]],null,null,null,[[["uid_t",6]],["ioresult",6,[["string",3]]]],null,null,null,null,[[["str",0]],["ioresult",6,[["uid_t",6]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",6]],[[["usize",0]],["result",6,[["usize",0]]]],[[["usize",0]],["result",6]],[[],["result",6,[["usize",0]]]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["exitstatus",4]],[[["",0],["",0]]],[[["",0]],["option",4,[["i32",0]]]],[[["",0],["exitstatus",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[],["gid_t",6]],[[],["uid_t",6]],[[],["gid_t",6]],[[],["uid_t",6]],[[]],[[["",0],["exitstatus",4]],["bool",0]],[[["",0],["usize",0]],["result",6]],[[["",0]],["option",4,[["i32",0]]]],[[["",0]],["bool",0]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0],["duration",3]],["result",6,[["option",4,[["exitstatus",4]]]]]],null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["quotes",4]],[[["",0],["",0]]],[[["osstr",3],["quotingstyle",4]],["string",3]],[[]],[[]],[[]],[[]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["range",3]],["ordering",4]],[[],["vec",3,[["range",3]]]],[[["usize",0]],["bool",0]],[[["",0],["range",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[["str",0]],["result",4,[["vec",3],["string",3]]]],[[["str",0]],["result",4,[["str",0]]]],null,[[]],null,[[["",0],["range",3]],["bool",0]],[[["",0],["range",3]],["option",4,[["ordering",4]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],null,[[]],[[["usize",0]]],[[]],[[["usize",0]]],[[["",0]],["option",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,[[["usize",0]],["bool",0]],[[["str",0]],["option",4,[["usize",0]]]],[[["usize",0]],["option",4,[["str",0]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["ioresult",6,[["string",3]]]],[[["",0]]],[[]],[[["",0]]],[[]],[[]],[[]],[[["",0]],["string",3]],[[]],[[]],[[],["utmpx",3]],[[]],[[["",0]],["bool",0]],[[],["utmpxiter",3]],[[["asref",8,[["path",3]]]],["utmpxiter",3]],[[["",0]],["offsetdatetime",3]],[[["",0]],["option",4]],[[["",0]],["i32",0]],[[["",0]],["i16",0]],[[]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["string",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["string",3]],[[],["i32",0]],[[["str",0],["str",0]],["ordering",4]]],"p":[[4,"ConversionResult"],[4,"InvalidEncodingHandling"],[8,"Args"],[13,"Complete"],[13,"Lossy"],[4,"BackupError"],[4,"BackupMode"],[13,"InvalidArgument"],[13,"AmbiguousArgument"],[3,"Quoted"],[8,"Quotable"],[4,"Format"],[4,"DecodeError"],[4,"EncodeError"],[3,"Data"],[13,"Decode"],[13,"DecodeZ85"],[13,"Io"],[3,"Passwd"],[3,"Group"],[8,"Locate"],[3,"ExitCode"],[3,"USimpleError"],[3,"UUsageError"],[3,"UIoError"],[3,"ClapErrorWrapper"],[8,"UError"],[8,"FromIo"],[8,"UClapError"],[4,"MissingHandling"],[4,"ResolveMode"],[3,"FileInformation"],[8,"FsMeta"],[3,"statfs_fn"],[3,"FsUsage"],[8,"BirthTime"],[3,"MountInfo"],[3,"Lines"],[3,"Memo"],[4,"ParseSizeError"],[13,"InvalidSuffix"],[13,"ParseFailure"],[13,"SizeTooBig"],[4,"IfFrom"],[4,"TraverseSymlinks"],[4,"VerbosityLevel"],[3,"ChownExecutor"],[3,"Verbosity"],[13,"User"],[13,"Group"],[13,"UserGroup"],[4,"ExitStatus"],[8,"ChildExt"],[13,"Code"],[13,"Signal"],[4,"QuotingStyle"],[4,"Quotes"],[13,"Shell"],[13,"C"],[13,"Literal"],[3,"Range"],[3,"RingBuffer"],[3,"Utmpx"],[3,"UtmpxIter"]]},\
"uucore_procs":{"doc":"","t":[23],"n":["main"],"q":["uucore_procs"],"d":[""],"i":[0],"f":[null],"p":[]},\
"uudoc":{"doc":"","t":[3,6,11,11,11,12,11,11,11,11,11,11,5,11,11,5,11,12,11,11,12,11,11,11,11,5,12,11,11,12],"n":["MDWriter","UtilityMap","additional","borrow","borrow_mut","command","deref","deref_mut","description","drop","examples","from","get_zip_content","init","into","main","markdown","name","options","platforms","tldr_zip","try_from","try_into","type_id","usage","util_map","utils_per_platform","version","vzip","w"],"q":["uudoc","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1],"f":[null,null,[[["",0]],["result",6]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["",0]],["result",6]],[[["usize",0]]],[[["",0]],["result",6]],[[]],[[["ziparchive",3],["str",0]],["option",4,[["string",3]]]],[[],["usize",0]],[[]],[[],["result",6]],[[["",0]],["result",6]],null,[[["",0]],["result",6]],[[["",0]],["result",6]],null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["result",6]],[[],["map",3,[["str",0]]]],null,[[["",0]],["result",6]],[[]],null],"p":[[3,"MDWriter"]]},\
"vdir":{"doc":"","t":[5],"n":["main"],"q":["vdir"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"wc":{"doc":"","t":[5],"n":["main"],"q":["wc"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"who":{"doc":"","t":[5],"n":["main"],"q":["who"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"whoami":{"doc":"","t":[5],"n":["main"],"q":["whoami"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"yes":{"doc":"","t":[5],"n":["main"],"q":["yes"],"d":[""],"i":[0],"f":[[[]]],"p":[]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};